'use client';

import { cn } from "../../../lib/utils";
import React, { useState } from "react";
import { useCategoryStore } from "../../../store/category";
import { Button } from "../ui/button";
import Modal from "@/app/modal";


interface Props {
  className?: string;
}

interface CategProps {
  id: number;
  title: string;
}

interface InformProps {
  id: number, title: string;
}

const categs: CategProps[] = [
  { id: 1, title: 'Premium' },
  { id: 2, title: 'Middle' },
  { id: 3, title: 'Budgetary' },
  { id: 4, title: 'Discounts' },
  { id: 5, title: 'Information' }
];

const inform: InformProps[] =[
  { id: 1, title: 'üíé–î–∏—Ä–µ–∫—Ç–æ—Ä –∫–æ–º–ø–∞–Ω—ñ—ó: –ö–æ–Ω–æ–Ω—á—É–∫ –ú–∞–∫—Å–∏–º (mxxknk@gmail.com)' },
  { id: 2, title: 'üëî–ó–∞—Å—Ç—É–ø–Ω–∏–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞: –ö—É—à–Ω—ñ—Ä –Ü–ª–ª—è (+380-63-549-7932)' },
  { id: 3, title: 'üõ†–ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –ê–Ω—Ç–æ–Ω—é–∫ –û–ª–µ–∫—Å–∞–Ω–¥—Ä (+380-95-401-7825)' },
  { id: 4, title: 'üîß–Ü–Ω–∂–µ–Ω–µ—Ä-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –ú–æ—Ä–≥—É–Ω–æ–≤ –í—ñ—Ç–∞–ª—ñ–π (+380-97-171-3622)' },
]

export const Categories: React.FC<Props> = ({ className }) => {
  const categoryActiveId = useCategoryStore((state) => state.activeId);
  const [isModalOpen, setModalOpen] = useState(false); // –î–æ–¥–∞–Ω–æ —Å—Ç–∞–Ω –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞

  const handleInfoClick = () => {
    setModalOpen(true); // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
  };

  return (
    <>
      <div className={cn('inline-flex gap-1 bg-gray-50 p-1 rounded-2xl', className)}>
        {categs.map(({ title, id }, index) => (
          <div key={index}>
            {id === 5 ? ( // –Ø–∫—â–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è "Information", —Ä–µ–Ω–¥–µ—Ä–∏–º–æ –∫–Ω–æ–ø–∫—É
              <button
                className={cn(
                  'flex items-center font-bold h-11 rounded-2xl px-5',
                  categoryActiveId === id && 'bg-white shadow-md shadow-gray-200 text-primary'
                )}
                onClick={handleInfoClick} // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É
              >
                {title}
              </button>
            ) : (
              <a
                href={`#${title.toLowerCase()}`}
                className={cn(
                  'flex items-center font-bold h-11 rounded-2xl px-5',
                  categoryActiveId === id && 'bg-white shadow-md shadow-gray-200 text-primary'
                )}
              >
                {title}
              </a>
            )}
          </div>
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó "Information" */}
      <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>
      <h2 style={{fontSize: '24px', fontWeight: 'bolder'}}>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
      <div className="inform-list">
        {inform.map((item) => (
          <p key={item.id} className="inform-item">{item.title}</p>
        ))}
      </div>
      </Modal>
    </>
  );
};
