generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING") //якщо краше то деліт стороку
}

model User {
    id Int @id @default(autoincrement())

    fullName String? 
    email String @unique
    password String 
    role UserRole @default(USER)
    verified DateTime?

    provider String?
    providerId String?

    cart Cart?
    orders Order[]
    verifCode VerificationCode?

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model Category {
    id Int @id @default(autoincrement())

    name String @unique
    products Product[]

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name String 
    imageUrl String

    materials Material[]
    variations ProductVariation[]

    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model ProductVariation {
    id Int @id @default(autoincrement())

    size Int
    
    cartItems CartItem[]

    product Product @relation(fields: [productId], references: [id])
    productId Int
}

model Material {
    id Int @id @default(autoincrement())

    name String @unique
    price Int
    image String

    products Product[]
    cartItems CartItem[]
 
    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model Cart {
    id Int @id @default(autoincrement())

    user User? @relation(fields: [userId], references: [id])
    userId Int? @unique

    CartItem CartItem[]

    token String?

    totalAmount Int @default(0)

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    productItem ProductVariation @relation(fields: [productItemId], references: [id])
    productItemId Int

    cart Cart @relation(fields: [cartId], references: [id])
    cartId Int

    quantity Int

    materials Material[]

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    user User? @relation(fields: [userId], references: [id])
    userId Int?
    
    token String

    totalAmount Int
    status OrderStatus
    paymentId String?

    items Json

    fullName String
    address String
    email String
    phone String
    comment String?

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user User @relation(fields: [userId], references: [id])
    userId Int @unique

    code String

    createdAt DateTime @default(now())

    @@unique([userId, code])
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER
    ADMIN
}